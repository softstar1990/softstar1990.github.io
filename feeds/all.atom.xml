<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jiaqi's Blog</title><link href="https://softstar1990.github.io/" rel="alternate"></link><link href="https://softstar1990.github.io/feeds/all.atom.xml" rel="self"></link><id>https://softstar1990.github.io/</id><updated>2017-10-19T01:23:00-07:00</updated><entry><title>My First Blog</title><link href="https://softstar1990.github.io/my-first-post.html" rel="alternate"></link><published>2017-10-19T01:23:00-07:00</published><updated>2017-10-19T01:23:00-07:00</updated><author><name>Jiaqi Zhu</name></author><id>tag:softstar1990.github.io,2017-10-19:my-first-post.html</id><summary type="html">&lt;h2&gt;Hello World/GitHub Page/Pelican!&lt;/h2&gt;
&lt;p&gt;好了拖了很久还是准备开始写自己的博客了，主要是有这么些原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记录一下自己做的东西，有时候好不容易查到资料会做了的东西，回头放了一段时间又忘了，或者资料找不到了，记录一下会比较好找。&lt;/li&gt;
&lt;li&gt;也算show一下自己做的东西，虽然感觉没人会看，但万一找工作什么的有用呢，谁知道。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为主要是自己写给自己看的，所以可能会比较乱，我考虑着可能会写的中英文夹杂。可能技术内容尽量是英文的，备注或者发发牢骚大概就用中文了。&lt;/p&gt;
&lt;p&gt;之前一直用的自己的域名&lt;a href="https://zhuijiaqi.me"&gt;zhujiaqi.me&lt;/a&gt;，不过那个是挂在UFL的服务器上了，懒得更新，主要就当是网络版的简历了。Blog的话因为要经常更新，所以还是选择用GitHub Page，更新维护方便，而且也不用操心域名啊host啊这些。使用Pelican是因为懒得自己写HTML，写markdown会容易很多，而且Pelican有plugins可以直接把jupyter notebook转换成blog文章，因为很多要写的东西可能都是python做的数据方面的一些东西，所以长篇大论的文章可能会直接用notebook写。&lt;/p&gt;
&lt;h2&gt;Create a Pelican Blog&lt;/h2&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;First make sure to install all the packages that are required.
Create a file called requirements.txt in blog folder, with the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Markdown==2.6.6
pelican==3.6.3
jupyter&amp;gt;=1.0
ipython&amp;gt;=4.0
nbconvert&amp;gt;=4.0
beautifulsoup4
ghp-import==0.4.1
matplotlib==1.5.1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; in blog folder to install all of the packages in requirements.txt&lt;/p&gt;
&lt;h3&gt;QuickStart&lt;/h3&gt;
&lt;p&gt;Just run &lt;code&gt;pelican-quickstart&lt;/code&gt; in blog folder and answer all the question by prompt, it will ask if you want to use GitHub Pages.&lt;/p&gt;
&lt;p&gt;We should have these files in the folder now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;blog
│   output
│   content
│   .gitignore
│   develop_server.sh
│   fabfile.py
│   Makefile
│   requirements.txt
│   pelicanconf.py
│   publishconf.py
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install Plugins for Jupyter Notebook&lt;/h3&gt;
&lt;p&gt;To support writting content in notebook, we need to add a plugin.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First run &lt;code&gt;git init&lt;/code&gt; to initialize current folder as git repo.&lt;/li&gt;
&lt;li&gt;Then run &lt;code&gt;mkdir plugins&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git submodule add git://github.com/danielfrg/pelican-ipynb.git plugins/ipynb&lt;/code&gt; to add in the plugin. You can also copy code from that repo to plugins folder, it should also work.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then use text editor to modify &lt;code&gt;pelicanconf.py&lt;/code&gt;, and add these lines to the bottom:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;MARKUP = (&amp;#39;md&amp;#39;, &amp;#39;ipynb&amp;#39;)
PLUGIN_PATH = [&amp;#39;./plugins&amp;#39;]
PLUGINS = [&amp;#39;ipynb.markup&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Write Post&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Put a Jupyter Notebook in &lt;code&gt;content&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a file with same name, with extension &lt;code&gt;.ipynb-meta&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add following content to meta file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;Post&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;firsts&lt;/span&gt;
&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jiaqi&lt;/span&gt; &lt;span class="n"&gt;Zhu&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Generate HTML Files&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Switch to the root folder.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;pelican content&lt;/code&gt; to generate the HTML.&lt;/li&gt;
&lt;li&gt;Switch to the &lt;code&gt;output&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python -m pelican.server&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Visit &lt;code&gt;localhost:8000&lt;/code&gt; in your browser to preview the blog.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Create GitHub Page&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Sign up for Github if you haven’t already.&lt;/li&gt;
&lt;li&gt;Create a repository called username.github.io, where username is your Github username. &lt;/li&gt;
&lt;li&gt;Switch to the root folder.&lt;/li&gt;
&lt;li&gt;Add the repository as a remote for your local git repository by running &lt;code&gt;git remote add origin git@github.com:username/username.github.io.git&lt;/code&gt; – replace both references to username with your Github username.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then, we’ll need to modify Pelican so that URLs point to the right spot:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edit &lt;code&gt;SITEURL&lt;/code&gt; in &lt;code&gt;publishconf.py&lt;/code&gt;, so that it is set to &lt;code&gt;http://username.github.io&lt;/code&gt;, where username is your Github username.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;pelican content -s publishconf.py&lt;/code&gt;. When you want to preview your blog locally, run &lt;code&gt;pelican content&lt;/code&gt;. Before you deploy, run &lt;code&gt;pelican content -s publishconf.py&lt;/code&gt;. This uses the correct settings file for deployment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Deploy to Github&lt;/h3&gt;
&lt;p&gt;We’ll need to add the content of the blog to the master branch for Github Pages to work properly. Currently, the HTML content is inside the folder output, but we need it to be at the root of the repository, not in a subfolder. We can use the &lt;code&gt;ghp-import&lt;/code&gt; tool for this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;ghp-import output -b master&lt;/code&gt; to import everything in the output folder to the master branch.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;git push origin master&lt;/code&gt; to push your content to Github.&lt;/li&gt;
&lt;li&gt;Try visiting &lt;code&gt;username.github.io&lt;/code&gt; – you should see your page!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whenever you make a change to your blog, just re-run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;publishconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When you want to check your site locally:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican content
python -m pelican.server
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Some Useful Links&lt;/h2&gt;
&lt;p&gt;&lt;a href=""&gt;http://blog.csdn.net/simple_the_best/article/details/52821132&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;http://docs.getpelican.com/en/stable/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;https://github.com/danielfrg/pelican-ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;https://github.com/MacDownApp/macdown&lt;/a&gt;&lt;/p&gt;</summary><category term="Pelican"></category><category term="Python"></category></entry></feed>